services:
    kafka-controller-0:
        image: bitnami/kafka:4.0.0-debian-12-r10
        environment:
            - KAFKA_CLUSTER_ID=REPLACE_WITH_CLUSTER_ID
            - KAFKA_ENABLE_KRAFT=yes
            - KAFKA_CFG_NODE_ID=0
            - KAFKA_CFG_PROCESS_ROLES=controller
            - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
            - KAFKA_CFG_LISTENERS=CONTROLLER://:9093
            - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT
            - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-controller-0:9093,1@kafka-controller-1:9093,2@kafka-controller-2:9093
            - ALLOW_PLAINTEXT_LISTENER=yes
            - KAFKA_HEAP_OPTS=-Xms512m -Xmx1g
        volumes:
            - microchat-kafka_ctrl_0:/bitnami/kafka
        networks: [microchat-backoffice]
        stop_grace_period: 2m
        ulimits:
            nofile: 100000
        healthcheck:
            test: ['CMD-SHELL', "bash -lc 'echo > /dev/tcp/127.0.0.1/9093'"]
            interval: 15s
            timeout: 5s
            retries: 20
            start_period: 60s
        deploy:
            replicas: 1
            placement:
                constraints:
                    - node.labels.role == microchat
                max_replicas_per_node: 1
            update_config:
                order: start-first
                parallelism: 1
                failure_action: rollback
                monitor: 15s
            rollback_config:
                order: stop-first
            restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 0
                window: 2m

    kafka-controller-1:
        image: bitnami/kafka:4.0.0-debian-12-r10
        environment:
            - KAFKA_CLUSTER_ID=REPLACE_WITH_CLUSTER_ID
            - KAFKA_ENABLE_KRAFT=yes
            - KAFKA_CFG_NODE_ID=1
            - KAFKA_CFG_PROCESS_ROLES=controller
            - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
            - KAFKA_CFG_LISTENERS=CONTROLLER://:9093
            - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT
            - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-controller-0:9093,1@kafka-controller-1:9093,2@kafka-controller-2:9093
            - ALLOW_PLAINTEXT_LISTENER=yes
            - KAFKA_HEAP_OPTS=-Xms512m -Xmx1g
        volumes:
            - microchat-kafka_ctrl_1:/bitnami/kafka
        networks: [microchat-backoffice]
        stop_grace_period: 2m
        ulimits:
            nofile: 100000
        healthcheck:
            test: ["CMD-SHELL", "bash -lc 'echo > /dev/tcp/127.0.0.1/9093'"]
            interval: 15s
            timeout: 5s
            retries: 20
            start_period: 60s
        deploy:
            replicas: 1
            placement:
                constraints:
                    - node.labels.role == microchat
                max_replicas_per_node: 1
            update_config:
                order: start-first
                parallelism: 1
                failure_action: rollback
                monitor: 15s
            rollback_config:
                order: stop-first
            restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 0
                window: 2m

    kafka-controller-2:
        image: bitnami/kafka:4.0.0-debian-12-r10
        environment:
            - KAFKA_CLUSTER_ID=REPLACE_WITH_CLUSTER_ID
            - KAFKA_ENABLE_KRAFT=yes
            - KAFKA_CFG_NODE_ID=2
            - KAFKA_CFG_PROCESS_ROLES=controller
            - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
            - KAFKA_CFG_LISTENERS=CONTROLLER://:9093
            - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT
            - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-controller-0:9093,1@kafka-controller-1:9093,2@kafka-controller-2:9093
            - ALLOW_PLAINTEXT_LISTENER=yes
            - KAFKA_HEAP_OPTS=-Xms512m -Xmx1g
        volumes:
            - microchat-kafka_ctrl_2:/bitnami/kafka
        networks: [microchat-backoffice]
        stop_grace_period: 2m
        ulimits:
            nofile: 100000
        healthcheck:
            test: ["CMD-SHELL", "bash -lc 'echo > /dev/tcp/127.0.0.1/9093'"]
            interval: 15s
            timeout: 5s
            retries: 20
            start_period: 60s
        deploy:
            replicas: 1
            placement:
                constraints:
                    - node.labels.role == microchat
                max_replicas_per_node: 1
            update_config:
                order: start-first
                parallelism: 1
                failure_action: rollback
                monitor: 15s
            rollback_config:
                order: stop-first
            restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 0
                window: 2m

    kafka-broker-0:
        image: bitnami/kafka:4.0.0-debian-12-r10
        environment:
            - BITNAMI_DEBUG=true
            - KAFKA_CLUSTER_ID=REPLACE_WITH_CLUSTER_ID
            - KAFKA_ENABLE_KRAFT=yes
            - KAFKA_CFG_NODE_ID=3
            - KAFKA_CFG_PROCESS_ROLES=broker
            - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-controller-0:9093,1@kafka-controller-1:9093,2@kafka-controller-2:9093
            - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
            - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
            - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-broker-0:9092
            - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
            - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
            - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
            - ALLOW_PLAINTEXT_LISTENER=yes
            - KAFKA_HEAP_OPTS=-Xms512m -Xmx1g
        volumes:
            - microchat-kafka_persistence_0:/bitnami/kafka
        networks: [microchat-backoffice]
        stop_grace_period: 2m
        ulimits:
            nofile: 100000
        healthcheck:
            test: [ "CMD-SHELL", "kafka-broker-api-versions.sh --bootstrap-server 127.0.0.1:9092 >/dev/null 2>&1" ]
            interval: 10s
            timeout: 5s
            retries: 12
            start_period: 120s
        deploy:
            replicas: 1
            placement:
                constraints:
                    - node.labels.role == microchat
                max_replicas_per_node: 1
            update_config:
                order: start-first
                parallelism: 1
                failure_action: rollback
                monitor: 20s
            rollback_config:
                order: stop-first
            restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 0
                window: 2m
            resources:
                reservations:
                    memory: 512M
                limits:
                    memory: 2G

    kafka-broker-1:
        image: bitnami/kafka:4.0.0-debian-12-r10
        environment:
            - KAFKA_CLUSTER_ID=REPLACE_WITH_CLUSTER_ID
            - KAFKA_ENABLE_KRAFT=yes
            - KAFKA_CFG_NODE_ID=4
            - KAFKA_CFG_PROCESS_ROLES=broker
            - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-controller-0:9093,1@kafka-controller-1:9093,2@kafka-controller-2:9093
            - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
            - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
            - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-broker-1:9092
            - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
            - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
            - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
            - ALLOW_PLAINTEXT_LISTENER=yes
            - KAFKA_HEAP_OPTS=-Xms512m -Xmx1g
        volumes:
            - microchat-kafka_persistence_1:/bitnami/kafka
        networks: [microchat-backoffice]
        stop_grace_period: 2m
        ulimits:
            nofile: 100000
        healthcheck:
            test: [ "CMD-SHELL", "kafka-broker-api-versions.sh --bootstrap-server 127.0.0.1:9092 >/dev/null 2>&1" ]
            interval: 10s
            timeout: 5s
            retries: 12
            start_period: 120s
        deploy:
            replicas: 1
            placement:
                constraints:
                    - node.labels.role == microchat
                max_replicas_per_node: 1
            update_config:
                order: start-first
                parallelism: 1
                failure_action: rollback
                monitor: 20s
            rollback_config:
                order: stop-first
            restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 0
                window: 2m
            resources:
                reservations:
                    memory: 512M
                limits:
                    memory: 2G

    kafka-broker-2:
        image: bitnami/kafka:4.0.0-debian-12-r10
        environment:
            - KAFKA_CLUSTER_ID=REPLACE_WITH_CLUSTER_ID
            - KAFKA_ENABLE_KRAFT=yes
            - KAFKA_CFG_NODE_ID=5
            - KAFKA_CFG_PROCESS_ROLES=broker
            - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-controller-0:9093,1@kafka-controller-1:9093,2@kafka-controller-2:9093
            - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
            - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
            - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-broker-2:9092
            - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
            - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
            - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
            - ALLOW_PLAINTEXT_LISTENER=yes
            - KAFKA_HEAP_OPTS=-Xms512m -Xmx1g
        volumes:
            - microchat-kafka_persistence_2:/bitnami/kafka
        networks: [microchat-backoffice]
        stop_grace_period: 2m
        ulimits:
            nofile: 100000
        healthcheck:
            test: [ "CMD-SHELL", "kafka-broker-api-versions.sh --bootstrap-server 127.0.0.1:9092 >/dev/null 2>&1" ]
            interval: 10s
            timeout: 5s
            retries: 12
            start_period: 120s
        deploy:
            replicas: 1
            placement:
                constraints:
                    - node.labels.role == microchat
                max_replicas_per_node: 1
            update_config:
                order: start-first
                parallelism: 1
                failure_action: rollback
                monitor: 20s
            rollback_config:
                order: stop-first
            restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 0
                window: 2m
            resources:
                reservations:
                    memory: 512M
                limits:
                    memory: 2G

    kafka-ui:
        image: provectuslabs/kafka-ui:v0.7.2
        environment:
            - KAFKA_CLUSTERS_0_NAME=microchat
            - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka-broker-0:9092,kafka-broker-1:9092,kafka-broker-2:9092
            - SPRING_CONFIG_ADDITIONAL_LOCATION=/etc/configs/ui-config.yml
        configs:
            - source: microchat-kafka_ui
              target: /etc/configs/ui-config.yml
              uid: '0'
              gid: '0'
              mode: 0444
        networks:
            - microchat-backoffice
            - microchat-public_net
        deploy:
            replicas: 1
            placement:
                max_replicas_per_node: 1
            labels:
                - traefik.enable=true
                - traefik.swarm.network=microchat-public_net
                - traefik.http.routers.kafka-ui.rule=Host(`kafka-ui.microchat`)
                - traefik.http.routers.kafka-ui.entrypoints=websecure
                - traefik.http.routers.kafka-ui.tls=true
                - traefik.http.services.kafka-ui-svc.loadbalancer.server.port=8080

volumes:
    microchat-kafka_ctrl_0:
        external: true
    microchat-kafka_ctrl_1:
        external: true
    microchat-kafka_ctrl_2:
        external: true
    microchat-kafka_persistence_0:
        external: true
    microchat-kafka_persistence_1:
        external: true
    microchat-kafka_persistence_2:
        external: true

configs:
    microchat-kafka_ui:
        external: true

networks:
    microchat-backoffice:
        external: true
    microchat-public_net:
        external: true
