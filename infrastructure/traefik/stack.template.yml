services:
    traefik:
        image: traefik:3.5
        ports:
            - 80:80
            - 443:443
        command:
            - --providers.swarm=true
            - --providers.swarm.exposedbydefault=false
            - --providers.swarm.network=microchat-public_net
#            - --providers.docker=true # Uncomment if you want to use docker compose services
#            - --providers.docker.exposedbydefault=false # Uncomment if you want to use docker compose services
#            - --providers.docker.network=microchat-public_net # Uncomment if you want to use docker compose services
            - --entrypoints.web.address=:80
            - --entrypoints.websecure.address=:443
            - --entrypoints.web.http.redirections.entryPoint.to=websecure
            - --entrypoints.web.http.redirections.entryPoint.scheme=https
            - --entrypoints.web.http.redirections.entryPoint.permanent=false
            - --api.dashboard=true
            - --api.insecure=true
            - --providers.file.directory=/etc/traefik/dynamic
            - --ping=true
            - --log.level=INFO
            - --accesslog=true
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - microchat-traefik_letsencrypt:/letsencrypt
        networks:
            - microchat-public_net
        configs:
            - source: microchat-traefik_tls
              target: /etc/traefik/dynamic/tls.yml
              uid: "0"
              gid: "0"
              mode: 0444
            - source: microchat-traefik_cert
              target: /etc/traefik/certs/cert.pem
              uid: "0"
              gid: "0"
              mode: 0444
            - source: microchat-traefik_cert_key
              target: /etc/traefik/certs/key.pem
              uid: "0"
              gid: "0"
              mode: 0400
        secrets:
            - source: microchat-traefik_basic_auth
              target: .basic-auth
              mode: 0400
        deploy:
            placement:
                constraints: [node.role == manager]
            update_config:
                parallelism: 1
                order: start-first
                failure_action: rollback
                monitor: 10s
            rollback_config:
                parallelism: 1
                order: stop-first
            restart_policy:
                condition: on-failure
                delay: 3s
                max_attempts: 3
                window: 60s
            labels:
                - traefik.enable=true
                - traefik.swarm.network=microchat-public_net
                - traefik.http.middlewares.traefik-auth.basicauth.usersfile=/run/secrets/.basic-auth
                - traefik.http.routers.traefik-dashboard.service=api@internal
                - traefik.http.routers.traefik-dashboard.rule=Host(`traefik.microchat`)
                - traefik.http.routers.traefik-dashboard.entrypoints=websecure
                - traefik.http.routers.traefik-dashboard.tls=true
                - traefik.http.routers.traefik-dashboard.middlewares=traefik-auth@swarm

    whoami:
        image: traefik/whoami

        networks:
            - microchat-public_net

        deploy:
            replicas: 1
            placement:
                max_replicas_per_node: 1
            labels:
                - traefik.enable=true
                - traefik.swarm.network=microchat-public_net
                - traefik.http.routers.whoami.rule=Host(`whoami.microchat`)
                - traefik.http.routers.whoami.entrypoints=websecure
                - traefik.http.routers.whoami.tls=true
                - traefik.http.services.whoami-svc.loadbalancer.server.port=80

volumes:
    microchat-traefik_letsencrypt:
        external: true

configs:
    microchat-traefik_tls:
        external: true
    microchat-traefik_cert:
        external: true
    microchat-traefik_cert_key:
        external: true

secrets:
    microchat-traefik_basic_auth:
        external: true

networks:
    microchat-public_net:
        external: true
